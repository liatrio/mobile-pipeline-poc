name: "IOS App Workflow"

on:
  pull_request: 
  #push:


env:
  ARTIFACT_NAME: ghcr.io/${{ github.repository_owner }}/mobile-pipeline-poc
  GIHUB_REPO: liatrio/mobile-pipeline-poc

jobs:
  Build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Install Yarn
        run: brew install yarn
      - name: Install Node Modules
        run: yarn install
      - name: Install Ruby
        run: brew install ruby
      - name: Install Cocoapods
        run: gem install cocoapods

      - name: Check Xcode Version
        run: xcodebuild -version
      - run: xcode-select -p
      - run: pod install
        working-directory: ios
        name: Install Pod dependencies
      - name: Run Tests
        run: yarn test
      - name: Build IOS
        run: "xcodebuild \
        -workspace ios/ReactNativeSemaphoreNew.xcworkspace \
        -scheme ReactNativeSemaphoreNew \
        clean archive \
        -sdk iphoneos \
        -configuration release \
        -UseModernBuildSystem=NO \
        -archivePath $PWD/ReactNativeSemaphoreNew \
        CODE_SIGNING_ALLOWED=NO"

      - name: 'upload artifact to be used with other jobs'
        uses: actions/upload-artifact@v2
        with:
          name: 'ios-artifact'
          path: 'ReactNativeSemaphoreNew.xcarchive/Products/Applications/ReactNativeSemaphoreNew.app'


  Publish-ios-binary: 
    runs-on: ubuntu-latest
    needs: Build-ios
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - name: Generate tag
        id: tag
        run: |
          echo ::set-output name=TAG::$(jq -r .version package.json)
          echo ::set-output name=SOURCE_TAG::$(git describe --tags --abbrev=0)
      - name: Bump version check
        run: |
          if [ ${{ steps.tag.outputs.TAG }} == ${{ steps.tag.outputs.SOURCE_TAG }} ]; then
            echo "Version: ${{ steps.tag.outputs.TAG }} needs to be updated in package.json" 
            exit 1
          fi 
      - name: Create release
        uses: liatrio/github-actions/github-release@github-release-package-actions
        if: github.ref == 'refs/heads/main'
        with:
          owner: 'liatrio'
          repo: 'mobile-pipeline-poc'
          tag_name: ${{ steps.tag.output.TAG }}
          name: 'Testing release action'
          token_name: 'token'
          pat: ${{ secrets.GITHUB_TOKEN }}

      - name: Download IOS artifact
        uses: actions/download-artifact@v2
        with: 
          name: ios-artifact
      - name: Deploy IOS binary to Github Packages
        uses: liatrio/github-actions/github-package@github-release-package-actions
        with: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILE: ios-artifact
          GITHUB_REPOSITORY: ${{ env.GITHUB_REPO }}


       

