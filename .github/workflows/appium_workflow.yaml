name: "Appium Workflow"

on:
  pull_request: 
  push:

jobs:
  Appium_IOS:
    runs-on: macos-latest
    env:
      ANDROID_SDK_ROOT: '/Users/runner/Library/Android/sdk'
      ANDROID_HOME: '/Users/runner/Library/Android/sdk'
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Install node modules
        run: yarn install

      - name: Global install of Appium
        run: npm uninstall -g appium && npm install -g appium

      - run: xcode-select -p
      - name: Install Pod dependencies
        run: pod install
        working-directory: ios

      ## Setup appium  
      - name: Run appium-doctor        
        run: npm run appium-doctor
      - name: Run appium in the background        
        run: npm run appium &
      - name: Check appium server status        
        run: curl http://localhost:4723/wd/hub/status

      - name: List ios sdks
        run: xcrun simctl list

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      #- name: Build ios app
      #  run: xcodebuild -workspace ios/ReactNativeSemaphoreNew.xcworkspace -scheme ReactNativeSemaphoreNew clean archive -destination "platform=iOS Simulator,name=iPhone 11,OS=15.0" -configuration release -UseModernBuildSystem=NO -archivePath $PWD/ReactNativeSemaphoreNew.xcarchive CODE_SIGNING_ALLOWED=NO

        # xcodebuild clean test -project ios/ReactNativeSemaphoreNew.xcodeproj -scheme ReactNativeSemaphoreNew -destination "platform=iOS Simulator,name=iPhone 11 Pro"

      # - name: Boot iOS simulator
      #   run: xcrun simctl boot "iPhone 11" &


# ---------------------------------
        # xcodebuild: error: destination implies architecture, architecture must not also be specified.
      # - name: Build IOS - architecture, destination, sdk
      #   run: xcodebuild -arch i386 -workspace ios/ReactNativeSemaphoreNew.xcworkspace -scheme ReactNativeSemaphoreNew clean archive -destination "platform=iOS Simulator,name=iPhone 11,OS=15.0" -sdk iphonesimulator15.0 -configuration release -UseModernBuildSystem=NO -archivePath $PWD/ReactNativeSemaphoreNew1.xcarchive CODE_SIGNING_ALLOWED=NO
# --------------------------------- - Issue can occur randomly, solutions seemed to be restarting xcode or using a generic ios device for testing
      # <unknown>:0: error: unable to load standard library for target 'armv7-apple-ios10.0-simulator'

      # ** ARCHIVE FAILED **


      # The following build commands failed:
      #   CompileSwift normal armv7 /Users/runner/work/mobile-pipeline-poc/mobile-pipeline-poc/ios/ReactNativeSemaphoreNew/SwiftFile.swift
      #   CompileSwiftSources normal armv7 com.apple.xcode.tools.swift.compiler
      # (2 failures)
      # - name: Build IOS - destination, sdk
      #   run: xcodebuild -workspace ios/ReactNativeSemaphoreNew.xcworkspace -scheme ReactNativeSemaphoreNew clean archive -destination "platform=iOS Simulator,name=iPhone 11,OS=15.0" -sdk iphonesimulator15.0 -configuration release -UseModernBuildSystem=NO -archivePath $PWD/ReactNativeSemaphoreNew1.xcarchive CODE_SIGNING_ALLOWED=NO
# ---------------------------------
      # - name: Build IOS - architecture, sdk
      #   run: xcodebuild -arch i386 -workspace ios/ReactNativeSemaphoreNew.xcworkspace -scheme ReactNativeSemaphoreNew clean archive -sdk iphonesimulator15.0 -configuration release -UseModernBuildSystem=NO -archivePath $PWD/ReactNativeSemaphoreNew1.xcarchive CODE_SIGNING_ALLOWED=NO
      # - name: Build IOS - destination
      #   run: xcodebuild -workspace ios/ReactNativeSemaphoreNew.xcworkspace -scheme ReactNativeSemaphoreNew clean archive -destination "platform=iOS Simulator,name=iPhone 11,OS=15.0" -configuration release -UseModernBuildSystem=NO -archivePath $PWD/ReactNativeSemaphoreNew2.xcarchive CODE_SIGNING_ALLOWED=NO
      # - name: Build IOS - sdk
      #   run: xcodebuild -workspace ios/ReactNativeSemaphoreNew.xcworkspace -scheme ReactNativeSemaphoreNew clean archive -destination "platform=iOS Simulator,name=iPhone 11,OS=15.0" -configuration release -UseModernBuildSystem=NO -archivePath $PWD/ReactNativeSemaphoreNew3.xcarchive CODE_SIGNING_ALLOWED=NO
      
      - name: Build IOS - architecture, sdk
        run: xcodebuild -arch x86_64 -workspace ios/ReactNativeSemaphoreNew.xcworkspace -scheme ReactNativeSemaphoreNew clean archive -sdk iphonesimulator15.0 -configuration release -UseModernBuildSystem=NO -archivePath $PWD/ReactNativeSemaphoreNew1.xcarchive CODE_SIGNING_ALLOWED=NO

      # - name: Check simulator status
      #   run: xcrun simctl list | grep "(Booted)"
        
      # run: xcodebuild -workspace ios/ReactNativeSemaphoreNew.xcworkspace -scheme ReactNativeSemaphoreNew clean archive -sdk iphoneos -configuration release -UseModernBuildSystem=NO -archivePath $PWD/ReactNativeSemaphoreNew.xcarchive CODE_SIGNING_ALLOWED=NO


      # - name: 'upload artifact to be used with other jobs'
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: 'ReactNativeSemaphoreNew.app'
      #     path: 'ReactNativeSemaphoreNew.xcarchive/Products/Applications/ReactNativeSemaphoreNew.app'
      # - name: Convert the app's .app file to .ipa
      #   run: |
      #     mkdir Payload
      #     cp -R ReactNativeSemaphoreNew.xcarchive/Products/Applications/ReactNativeSemaphoreNew.app Payload 
      #     zip -r ReactNativeSemaphoreNew.ipa Payload

      # - name: Run the emulator in the background
      #   run: |
      #     /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app/Contents/MacOS/Simulator -CurrentDeviceUDID ADDCA261-95B1-41D4-B911-FCBD965EDBF2 &

  #     - name: Run appium integration Tests
  #       run: npm run mocha appium/ios

      - name: Setup upterm session
        uses: lhotari/action-upterm@v1 
        
  # Appium:
  #   runs-on: macos-latest
  #   env:
  #     ANDROID_SDK_ROOT: '/Users/runner/Library/Android/sdk'
  #     ANDROID_HOME: '/Users/runner/Library/Android/sdk'
  #   steps:
  #     - name: Checkout 
  #       uses: actions/checkout@v2

  #     - name: Set up JDK 8
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: '8'

  #     - name: Install node modules
  #       run: yarn install

  #     ## Setup appium  
  #     - name: Run appium-doctor        
  #       run: npm run appium-doctor
  #     - name: Run appium in the background        
  #       run: npm run appium &
  #     - name: Check appium server status        
  #       run: curl http://localhost:4723/wd/hub/status

  #     ## Android sdk
  #     - name: Setup android SDK
  #       uses: android-actions/setup-android@v2
  #     - name: Platform tools installation
  #       run: sdkmanager "platform-tools" "platforms;android-27"

  #     ## Android emulator creation
  #     - name: Install SDK
  #       run: sdkmanager --install "system-images;android-27;google_apis;x86"
  #     - name: Create AVD
  #       run: echo "no" | avdmanager create avd -n sdk_gphone_x86 -k "system-images;android-27;google_apis;x86"

  #     ## Android abd server
  #     - name: Start adb server
  #       run: sudo adb start-server &

  #     ## Setup android emulator
  #     - name: Run emulator
  #       run: cd /Users/runner/Library/Android/sdk/emulator && ./emulator -avd sdk_gphone_x86 -no-audio -no-window -gpu swiftshader_indirect &
  #     - name: Wait for device to be operational
  #       run: adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done; input keyevent 82'

  #     - name: Run appium integration Tests
  #       run: npm run mocha appium/android
