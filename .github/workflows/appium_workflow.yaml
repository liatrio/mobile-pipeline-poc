name: "Appium Workflow"

on:
  pull_request: 
  push:

jobs:

  Appium-IOS:
    runs-on: macos-latest
    env:
      DEVICE_ID: 'FC41B203-8F38-458B-9F64-23ADB1A969B4'
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Install appium globally
        run: yarn global add appium
      - name: Start webdriver agent
        run: |
          cd ~/.config/yarn/global/node_modules/appium-webdriveragent/
          xcodebuild -project WebDriverAgent.xcodeproj -scheme WebDriverAgentRunner -destination "id=$DEVICE_ID" test &

  #     # - name: Wait for webdriver to be ready
  #     #   #run: ./wait-for-webdriver-agent.sh   
  #     #   run: i=$(curl http://localhost:8100/status | grep -v success); while [ "$i" = "" ]; do i=$(curl http://localhost:8100/status | grep -v success); done

      - name: Install node modules
        run: yarn install

      # Setup appium  
      - name: Run appium-doctor        
        run: npm run appium-doctor --ios
      - name: Run appium in the background        
        run: npm run appium &
      - name: Check appium server status        
        run: curl http://localhost:4723/wd/hub/status

      - name: Install Pod dependencies
        run: pod install
        working-directory: ios

      - name: Build IOS - architecture, sdk
        run: xcodebuild -arch x86_64 -workspace ios/ReactNativeSemaphoreNew.xcworkspace -scheme ReactNativeSemaphoreNew clean archive -sdk iphonesimulator15.0 -configuration release -UseModernBuildSystem=NO -archivePath $PWD/ReactNativeSemaphoreNew.xcarchive CODE_SIGNING_ALLOWED=NO

      - name: Wait for webdriver to be ready
        run: sleep 500

      - name: Run iOS Appium tests
        run: npm run mocha appium/ios
          
      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1 


### --- Appium - Android (commented out for testing iOS exclusively) --- ###

  Appium-Android:
    runs-on: macos-latest
    env:
      ANDROID_SDK_ROOT: '/Users/runner/Library/Android/sdk'
      ANDROID_HOME: '/Users/runner/Library/Android/sdk'
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: '8'

      - name: Install node modules
        run: yarn install && yarn add webdriverio --dev

      - name: Install Appium Globally
        run: yarn global add appium

      ## Setup appium  
      - name: Run appium-doctor        
        run: npm run appium-doctor --android
      - name: Run appium in the background        
        run: npm run appium &
      - name: Check appium server status        
        run: curl http://localhost:4723/wd/hub/status

      ## Android sdk
      - name: Setup android SDK
        uses: android-actions/setup-android@v2
      - name: Platform tools installation
        run: sdkmanager "platform-tools" "platforms;android-27"

      ## Android emulator creation
      - name: Install SDK
        run: sdkmanager --install "system-images;android-27;google_apis;x86"
      - name: Create AVD
        run: echo "no" | avdmanager create avd -n sdk_gphone_x86 -k "system-images;android-27;google_apis;x86"

      ## Android abd server
      - name: Start adb server
        run: sudo adb start-server &

      ## Setup android emulator
      - name: Run emulator
        run: cd /Users/runner/Library/Android/sdk/emulator && ./emulator -avd sdk_gphone_x86 -no-audio -no-window -gpu swiftshader_indirect &
      - name: Wait for device to be operational
        run: adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done; input keyevent 82'

      - name: Run appium integration Tests
        run: npm run mocha appium/android
