name: "Appium Workflow"

on:
  pull_request: 
  push:

jobs:
  Appium:
    runs-on: macos-latest
    env:
      ANDROID_SDK_ROOT: '/Users/runner/Library/Android/sdk'
      ANDROID_HOME: '/Users/runner/Library/Android/sdk'
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: '8'

      - name: Install node modules
        run: yarn install

      - name: Run appium-doctor        
        run: npm run appium-doctor
      - name: Run appium in the background        
        run: npm run appium &
      - name: Check appium server status        
        run: curl http://localhost:4723/wd/hub/status

     ### Android sdk
      - name: Setup android SDK
        uses: android-actions/setup-android@v2
      - name: Platform tools installation
        run: sdkmanager "platform-tools" "platforms;android-27"

      - name: List sdks
        run: sdkmanager --list | grep system-images

      ## Android emulator
      - name: Install Emulator SDK
        run: sdkmanager --install emulator
      - name: Install SDK
        run: sdkmanager --install "system-images;android-27;google_apis;x86"
      - name: Create AVD
        run: echo "no" | avdmanager create avd -n sdk_gphone_x86 -k "system-images;android-27;google_apis;x86"

      ## Android abd server
      - name: Setup adb server
        run: sudo adb start-server &

      - name: Run emulator
        run: cd /Users/runner/Library/Android/sdk/emulator && ./emulator -avd sdk_gphone_x86 -no-audio -no-window -gpu swiftshader_indirect &

      - name: Wait for device to be operational
        run: adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done; input keyevent 82'

      - name: Run appium integration Tests
        run: npm run mocha appium/android
