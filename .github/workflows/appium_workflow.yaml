name: "Appium Workflow"

on:
  pull_request: 
  push:

jobs:
  Caching-npm-modules:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Install node modules
        run: yarn install
      - name: Cache Node Modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: npm-modules-${{ hashFiles('**/yarn.lock') }}

  Appium-android:
    runs-on: ubuntu-latest
    needs: Caching-npm-modules
    env:
      ANDROID_SDK_ROOT: '/usr/local/lib/android/sdk'
      ANDROID_HOME: '/usr/local/lib/android/sdk'
      JAVA_HOME: '/opt/hostedtoolcache/jdk/11.0.13/x64/bin/java'
    strategy:
      matrix:
        sdk: [28, 29, 30]
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: '8'
          
      - name: Un-cache Node Modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: npm-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: npm-modules-

      - name: Setup android SDK
        uses: android-actions/setup-android@v2
      - name: Emulator installation
        run: sdkmanager "platform-tools" "platforms;android-${{matrix.sdk}}"
      # - name: AVD installation
      #   run: avdmanager create avd -n test -k "system-images;android-${{matrix.sdk}};google_apis;x86"
      - name: List sdks
        run: sdkmanager --list

      - name: Run appium-doctor        
        run: npm run appium-doctor
      - name: Run appium in the background        
        run: npm run appium &
      - name: Check appium server status        
        run: curl http://localhost:4723/wd/hub/status

      - name: Setup upterm session
        uses: lhotari/action-upterm@v1

  Appium-iOS:
    runs-on: macos-latest
    needs: Caching-npm-modules
    env:
      JAVA_HOME: '/Library/Java/JavaVirtualMachines/Adopt-11.jdk/Contents/Home'
    # strategy:
    #   matrix:
    #     device: [9, 10, 11]
    #     simctl_SDKs: [13.7, 14.5, 15.0]
    steps:
      - name: Checkout 
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: '8'

      - name: Install Yarn
        run: brew install yarn

      - name: Un-cache Node Modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: npm-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: npm-modules-

      - name: Install Ruby
        run: brew install ruby
      - name: Install Cocoapods
        run: gem install cocoapods

      - name: Check Xcode Version
        run: xcodebuild -version
      - name: Check software versions
        run: softwareupdate --list
      - name: Update Command Line Tools for Xcode
        run: softwareupdate --install "Command Line Tools for Xcode-13.0"

      - run: xcode-select -p
      - name: Install Pod dependencies
        run: pod install
        working-directory: ios

      - name: Run appium-doctor        
        run: npm run appium-doctor
      - name: Run appium in the background        
        run: npm run appium &
      - name: Check appium server status        
        run: curl http://localhost:4723/wd/hub/status

      # - name: Create a test session       
      #   run: |
          # curl -H 'Content-type: application/json' \
          # http://localhost:4723/wd/hub/session \
          # -d '{"capabilities": {"alwaysMatch": {"automationName": "XCUITest", "platformName": "iOS", "platformVersion": "${{matrix.simctl_SDKs}}", "deviceName": "iPhone ${{matrix.device}}"}}}'

      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1
